### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar DateTime

type Issue {
  assignedUser: User
  assignedUserId: String
  createdAt: DateTime!
  description: String!
  id: String!
  project: Project!
  projectId: String!
  status: IssueStatus!
  title: String!
  updatedAt: DateTime!
  urlKey: String!
  user: User!
  userId: String!
}

input IssueCreateInput {
  assignedUserId: String
  description: String!
  id: String
  projectId: String!
  status: IssueStatus!
  title: String!
  urlKey: String!
}

enum IssueStatus {
  Backlog
  Canceled
  Done
  InProgress
  InReview
  Todo
}

input IssueUpdateInput {
  assignedUserId: String
  description: String!
  status: IssueStatus!
  title: String!
  urlKey: String!
}

type Mutation {
  createIssue(input: IssueCreateInput!): Issue!
  createProject(input: ProjectCreateInput!): Project!
  deleteIssue(id: String!): Issue!
  updateIssue(id: String!, input: IssueUpdateInput!): Issue!
  updateProject(id: String!, input: ProjectUpdateInput!): Project!
}

type Project {
  createdAt: DateTime!
  id: String!
  name: String!
  updatedAt: DateTime!
  urlKey: String!
}

input ProjectCreateInput {
  name: String!
  urlKey: String!
}

input ProjectUpdateInput {
  name: String!
  urlKey: String!
}

type Query {
  avaliableIssues: [Issue!]!
  avaliableProjects: [Project!]!
  isProjectUrlKeyFree(urlKey: String!): Boolean!
  projectByKey(urlKey: String!): Project!
}

type User {
  avatarUrl: String
  email: String!
  id: String!
}
